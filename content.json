{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"about","text":"我是谁？ 我是一名普通大学生、极客爱好者。 是NBA和F1的狂热粉丝。 白日梦是成为一名优秀的（白帽）hacker。 我将在这个网页上更新我的学习经历、生活等。 请多多指教！ 为什么搭建这样一个博客？ 其实最直接的原因是最近在w3school)学html+css，又偶然间在油管上刷到了利用hexo和github搭建个人博客的视频，脑子一热，就花了一段时间搭建了这个网站。 还有一个原因就是为了装杯，毕竟听说学IT的人总归要有个个人博客。技术不行那就先拿博客凑个数 然后呢就是为了有一个渠道去分享我的一些学习经验和生活吧。更新随缘。 如何联系我 谷歌邮箱 Github主页 欢迎所有访客的友好交流和建议哦！","link":"/about/index.html"},{"title":"tags","text":"","link":"/tags/index.html"},{"title":"友链","text":"","link":"/links/index.html"},{"title":"shuoshuo","text":"new Artitalk({ appId: 'imDrrIVyTB6pky5nbcjT3OMw-MdYXbMMI', appKey: '498RNQn9gphvNlktu3ijPwLe', pageSize: 10 })","link":"/shuoshuo/index.html"}],"posts":[{"title":"Markdown基础教程（Typora为例）","text":"什么是MarkdownMarkdown是一种轻量级标记语言，易读易写的纯文本格式编写文档。Markdown编写文档后缀为md 为什么要用markdown 简单易上手，可读性强。 兼容html，但在排版、链接、标题等写法上都简单许多。本站的博客都是用Markdown编写的。 用途广，如今Github、简书、csdn等许多网站都支持Markdown语法编写 做项目时可以用来编写简洁明了的README.md来介绍功能、用法等 Markdown编辑器 Typora个人目前的首选编辑器。可以利用css实现自定义样式；内置LaTex，方便编辑数学公式；可以实时预览。支持MacOS、Windows、Linux。1.0以前的版本免费，之后的版本收费。可以根据需要购买。官网：https://typora.io/ 中文站：https://typoraio.cn/ VSCode对于码农朋友们来说应该非常熟悉了。可以点击链接在官网下载。安装相应的Markdown插件之后就能有不错的Markdown编辑器体验了。这里分享一篇VSCode Markdown插件的教程博客：CSDN博客 Notedpad++官网下载地址：https://notepad-plus-plus.org/downloads/ Notion学生认证可以免费升级，还支持移动端。功能不止于Markdown编辑器，是一款笔记和效率应用。官网下载地址：https://www.notion.so/ 开始教程正文标题Markdown支持6种级别的标签，对应到html就是h1~h6，数字越小，标题等级越高，字体越大。语法如下： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 以上语言的效果如下： 注释语法：&lt;!--这里是被注释掉的内容--&gt;和html中的注释语法是一样的，被注释掉的部分将对读者不可见。写一些注释对你理解自己的文章结构是有好处的。 换行与分段换行是两句属于同一段，不在同一行；分段则是两句在不同行、不同段。会比换行有更明显的行间距举例说明： 这两句是换行这两句是换行 这两句是分段 这两句是分段 换行：在两句之间加入&lt;br&gt;或&lt;br /&gt;实现换行。 注：如果你正在使用typora，shift+enter可以换行 分段：enter 字体用*或_包裹一段文字可以用来强调。一对是斜体，两对是加粗，三对是加粗斜体 12345678*这里是斜体*_这里是斜体_**这里是加粗**__这里是加粗__***这里是加粗斜体***___这里是加粗斜体___ 以上代码的显示效果如下： 这里是斜体这里是斜体 这里是加粗这里是加粗 这里是加粗斜体这里是加粗斜体 除此之外还有高亮语法 1==这里是高亮== ==这里是高亮== 下划线和删除线非链接尽量避免使用下划线，以免和链接混淆，读者体验很差。这里不多赘述。删除线是用的比较多的一个语法 1~~加上删除线~~ 加上删除线 上标和下标用一对^包裹上标。如x^2^显示为x^2^用一对~包裹下标。如H~2~O显示为H2O 引用单行引用1&gt;引用内容 引用内容 多行引用12&gt;第一行引用&gt;第二行引用 第一行引用第二行引用 12&gt;第一行使用'&gt;'后面行省略也是引用 第一行使用’&gt;’后面行省略也是引用 123&gt;引用内容需要分段时，&gt;&gt;可以在引用内容中加一个空行 引用内容需要分段时， 可以在引用内容中加一个空行 另外，在引用中可以使用任意Markdown语法 列表在符号后记得加上空格 无序列表123* 可以使用'*'作为标记+ 也可以使用'+'作为标记- 也可以是'-' 可以使用’*’作为标记 也可以使用’+’作为标记 也可以是’-‘ 有序列表12341. 有序列表以阿拉伯数字和'.'开始2. 数字的顺序不影响生成的列表索引1. 比如这样2. 但是建议按照自然顺序编写 有序列表以阿拉伯数字和’.’开始 数字的顺序不影响生成的列表索引 比如这样 但是建议按照自然顺序编写 嵌套序列1234561. 第一层 + 第二层 + 第二层2. 无序列表和有序列表可以以任一方式嵌套 1. 2-1 2. 2-2 第一层 第二层 第二层 无序列表和有序列表可以以任一方式嵌套 2-1 2-2 分割线在一行中使用三个及以上的*,+,-来添加分割线 123***++++----- 符号之间加上空白字符是被允许的 1* * * 代码行内代码用一对反引号’ 来包裹行内代码（切换英文输入后按tab键上面，1键左边的按键） 1`这里是行内代码` 这里是行内代码 代码块可以在代码块中展示多行代码，可以允许复制，清晰易用用一对```来包裹代码块 12#include &lt;iostream&gt;//前面是```using namespacestd;//后面是``` ==值得一提的是，在行内代码和代码块中Markdown语法是无效的== 超链接行内式格式为[展示给读者的链接名称](路径，读者不可见) 网络路径 1[我的Gitgub主页](https://github.com/BowenYoung) 我的Gitgub主页 本地相对路径如./images/icon.png 本地绝对路径如C:\\Users\\Admin\\Desktop\\setu.png 自动链接使用&lt;&gt;包裹的URL或邮箱地址会被自动转换为超链接 12&lt;https://github.com/BowenYoung&gt;&lt;yys958257943@gmail.com&gt; https://github.com/BowenYoungyys958257943@gmail.com 适用于较短的链接，不然显得很丑==另外，邮箱还可以用[名称](mailto:你的邮箱地址)==如我的Gmail还有一种参考式用起来比较麻烦一些，有兴趣可以自己了解一下 图像和插入超链接的语法基本一致，在最前面加了一个!。也分行内式和参考式。路径也分为网络路径和本地的相对、绝对路径。这里就做一个网络路径的演示。 1![哆啦A梦](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201501%2F07%2F20150107123112_xPJLh.thumb.1000_0.jpeg&amp;refer=http%3A%2F%2Fc-ssl.duitang.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1652103506&amp;t=a7a2bc00990a39a5b2cd1547a7f4b9d0) 转义字符下列字符都可以通过使用反斜杠字符\\达到转义目的，避免与要用于Markdown语法的那些混淆 字符 名称 \\ 反斜杠 ` 反引号 * 星号 _ 下划线 () 圆括号 [] 方括号 {} 花括号 # 井号 + 加号 - 减号 . 句点 ! 感叹号 | 管道符 表格单元格和表头使用|来分隔不同的单元格，使用-分隔表头和其他行。 1234|name|money||---|---||Jobs|$10||Young|$10000000000| name money Jobs $10 Young $10000000000 对齐在表头下方的分割线标记中加入:，即可标记下方单元格内容的对齐方式 :--- 左对齐 :--:居中对齐 ---:右对齐 1234|left|center|right||:---|:--:|---:||Jobs|Gates|Musk||==Me==|Boyce|Young| left center right Jobs Gates Musk ==Me== Boyce Young ==可以在表格中使用Markdown语法== 总结以上就是Markdown基础教程（以Typora为例）的全部内容。之后会找时间更新进阶教程。上面的代码希望大家能自己敲一遍。光凭看去学任何语言，哪怕是Markdown这样的轻量标记语言，都是低效的。 ”一个人在科学探索的道路上走过弯路犯过错误并不是坏事,更不是什么耻辱,要在实践中勇于承认和改正错误。“ ——爱因斯坦 纠错：==包裹文字高亮应该是Typora独有的。如果要在markdown中高亮可以尝试用css","link":"/2022/04/09/mdLearn/"},{"title":"初来乍到，请多指教！","text":"我是谁？ 我是一名普通大学生、极客爱好者。 是NBA和F1的狂热粉丝。 白日梦是成为一名优秀的（白帽）hacker。 我将在这个网页上更新我的学习经历、生活等。 请多多指教！ 为什么搭建这样一个博客？ 其实最直接的原因是最近在w3school)学html+css，又偶然间在油管上刷到了利用hexo和github搭建个人博客的视频，脑子一热，就花了一段时间搭建了这个网站。 还有一个原因就是为了装杯，毕竟听说学IT的人总归要有个个人博客。技术不行那就先拿博客凑个数 然后呢就是为了有一个渠道去分享我的一些学习经验和生活吧。更新随缘。 如何联系我 谷歌邮箱 Github主页 欢迎所有访客的友好交流和建议哦！","link":"/2022/04/09/firstblog/"},{"title":"Markdown进阶教程（以Typora为例）","text":"此篇博客是进阶教程建议零基础小白先食用：基础教程 目录写法在任意位置添加[TOC]即可显示树状结构文章目录。显示效果可以参考本文目录：下图。 锚（跳转）有两种方法： Markdown原生： 1234跳转的终点（锚）：同html,见下跳转的起点（链接）：[显示的内容](#id)可以理解为跳转终点（锚）定义了一个名为id的元素，而跳转起点则是一个指向该元素的链接例如：文章第一句话的写法：&lt;a id=\"1\"&gt;此篇博客是进阶教程&lt;/a&gt;，下面一行是跳转起点：[跳转至开头](#1) 跳转至开头 ←点击此处查看效果注：id这里建议写英文或数字，不要写中文，可能会出错 HTML写法： 1234跳转起点：&lt;a id=\"xxx\"&gt;显示的内容&lt;/a&gt;跳转终点：&lt;a href=\"#xxx\"&gt;显示的内容&lt;/a&gt;除了a标签外，用p,div,span等标签也有效（将a改成p,div或span）例如：文章第一句话的写法：&lt;a id=\"1\"&gt;此篇博客是进阶教程&lt;/a&gt;，下面一行是跳转起点：&lt;a href=\"#1\"&gt;跳转至开头&lt;/a&gt; 跳转至开头←点击此处查看效果注：若要跳转到零一页面的锚，在终点的#xxx之前添加文件名（如1.html）即可 To-do list（任务列表） 未完成：- [ ] 短横+空格+左方括号+空格+右方括号+空格 已完成：-[x] 短横加空格+左方括号+字母x+右方括号+空格 注意-和[]中间一定要加空格、后面爷要加空格，未完成的写法[]中间有空格 举例： 123- [ ] 学习- [x] 打游戏- [x] 看电影 效果： 学习 打游戏 看电影 脚注由于本站源代码问题，脚注没有被很好地显示出来！ 如果有参考文献或文章之类的话应该要用的正文中脚注的编号用[^1],[^2],[^3]等，尾部注释对应用[^1]: 注释内容，[^2]: 注释内容 ，[^3]: 注释内容等脚注编号显示在文字右上角，鼠标移上去会显示注释内容 举例： 12他[^1]文末处：[^1]: 黑框眼镜 正文效果：他^1（注释在文末） Unicode特殊字符(emoji)格式为&amp;#数字;，其实是HTML举例：&amp;#937;为Ω，&amp;#952;为θ。 unicode字符包含的内容非常之多，最典型的还属emoji。如&amp;#128517;😅&amp;#129299;🤓 这里是unicode的参考网址 支持HTML的典型例子音频html5语法： 123&lt;audio src=\"音频文件路径\"&gt;不能播放时的报错信息&lt;/audio&gt; 举例： 123&lt;audio src=\"audio.mp3\"&gt;您的浏览器不支持播放该音频&lt;/audio&gt; 视频同为html5语法： 123&lt;video src=\"视频文件路径\"&gt;不能播放时的报错信息&lt;/video&gt; 举例： 123&lt;video src=\"video.mp4\"&gt;您的浏览器不支持播放该音频&lt;/video&gt; 改变字体颜色和大小语法: 123&lt;font color=#00ffff size=7 face=\"纯书法字体\"&gt;青色7号纯书法字体&lt;/font&gt;或者&lt;font color=cyan size=7 face=\"纯书法字体\"&gt;或者可以这么写&lt;/font&gt; 显示效果: Markdown制图^2Markdown可以绘制很多图,如时序图、甘特图、mermaid流程图、flow流程图等。这里主要介绍flow流程图。其他的图可以参考这篇CSDN博客：点击跳转首先，用一对3个`包裹代码块并在第一处后输入flow，确定这一段代码用flow来编写然后就是绘制流程图的步骤。绘制流程图可以分为两步： 定义元素（框框和里面的内容）： 元素名称=&gt;元素类型: 显示的内容:&gt;超链接URL(:&gt;URL可以不要) 注意：=&gt;后不能有空格， :后需要有空格 元素类型有6种，分别为： 开始（椭圆形）：start 结束（椭圆形）：end 子程序（长得像圣旨诏书）：subroutine 操作（矩形）：operation 条件判断（菱形）：condition 输入输出（平行四边形）：inputoutput 关联元素 用 -&gt; 来关两个节点 如果是 condition 节点将会有 yes/true 和 no/false 两个分支 left/right表示连线出口在节点位置（默认下面是出口，如con2），也可以跟condition变量一起用，如：con1(yes,right) 举例： 123456789101112131415```flowstart=&gt;start: 开始end=&gt;end: 结束in=&gt;inputoutput: 输入年份ncon1=&gt;condition: n能否被4整除？con2=&gt;condition: n能被100整除？con3=&gt;condition: n能被400整除？out1=&gt;inputoutput: 输出闰年out2=&gt;inputoutput: 输出非闰年start(right)-&gt;in-&gt;con1(yes,right)-&gt;con2(yes)-&gt;con3(yes)-&gt;out1-&gt;endcon1(no)-&gt;con2-&gt;endcon2(no,right)-&gt;out1con3(no)-&gt;out2``` 效果： 数学公式原生的Markdown是不支持LaTex的，但如果用Typora则支持LaTex预览最后的显示效果取决于用什么软件编译和导出 总结本博客名为教程，实则是个人学习Markdown的一些学习经验分享，不保证完全正确和详尽。欢迎指正错误，也欢迎留言分享哦！ 今日一言： 我选择沉默的主要原因之一：从话语中，你很少能学到人性，从沉默中却能。假如还想学得更多，那就要继续一声不吭 。 —— 王小波","link":"/2022/04/14/mdlearn2/"},{"title":"hexo本地服务器更换端口","text":"hexo使用hexo s命令会启动本地服务器用以预览博客网页效果。默认启用的端口为4000，但有时可能因为其他进程占用4000端口导致localhost:4000无响应。官方给出的解决办法是，每次运行服务器时输入下列代码： 1hexo server -p 5000 当然也可以简写成： 1hexo s -p 5000 这样将指定启用5000端口。但这样做仅仅指定这一次打开5000端口，下次仍然会打开默认4000端口。下面介绍一个一劳永逸的方法：打开博客根目录下_config.yml文件，在文件的最后添加以下代码： 1234server: port: 5000 compress: true header: true 当然，可以将port: 后的数值修改成0-65535之间的任意端口（前提是没有被占用） （对的，就是在水一篇博文）","link":"/2022/04/19/port/"},{"title":"SQL注入新手教程（一）——sqli-labs靶场搭建","text":"网站环境搭建首先我们要搭建一个（本地）网站环境，如果对搭建网站不是很熟悉的小伙伴们可以使用XAMPP或者PHPstudy来搭建。这两个软件集成了搭建网站所需要用到的PHP、Apache、MySQL等软件。如果自己用其他方式搭建的话要注意sqli-labs是不支持PHP7的，因为之前版本的一些要用到的函数在PHP7中被删除了。我用的是5.6.9版本。这里我就用PHPstudy为例（听名字就知道使用起来更简单）: 首先确保没有安装过PHP，Apache或MySQL 前往官网下载PHPstudy：https://www.xp.cn/ 下载完成后安装，打开面板。 如图示操作，第一次打开应该点击更多版本，找到php5.6.9或者更低的版本安装。并将php版本切换成你安装的那个版本。接下来回到首页，按图操作： 将WAMP、Apache和MySQL启动，其他的停止。这里可能会遇到端口被占用的情况导致某个套件无法启动。遇到这个问题可以去找占用了改端口的进程并将其停止。Windows用户可以参考这篇文章：链接 如果上述过程都顺利完成，接下来在你的浏览器输入localhost或127.0.0.1就可以进入默认网页。这时就代表网站环境已经搭建成功了！芜湖！ sqli-labs下载与配置sqli-labs在GitHub上开源，直接到仓库里下载zip文件：https://github.com/Audi-1/sqli-labs 下载完成后解压并复制到phpstudy_pro\\www\\目录下 我这里将解压好的文件夹重命名为sqli方便我之后打开。注意：要确保你复制过来的文件夹打开是下图这样，如果打开是一个同名的文件夹，你应该把图中内容剪切出来并删除这个同名的文件夹 接着在sql-connections目录下找到db-creds.inc文件并打开修改 使用PHPstudy的话，用户名密码默认都是root，都修改为root即可。要是不喜欢的话可以打开PHPstudy面板点击数据库，按照相应提示修改密码就可以了。但一定要确保MySQL数据库的用户名密码和该配置中一致！！！ 接下来在浏览器中打开https://localhost/sqli/，这里sqli要换成你在Github上下载的那个文件夹解压后改的名字。（可以补充一下，这里搭建的网站其实就是www根目录下的所有文件和目录的集合。在后面加一个sqli/其实就是进入了sqli这个文件夹，然后进这个文件夹默认显示的就是这个文件夹里面的index.html或者index.php） 言归正传，打开后显示如图： 点击setup/reset Database for labs进行sqli-labs的初始化，初始化成功的页面如图： 如果看到这个页面，congratulations！sqli-labs靶场环境已经搭建成功了。接下来只要点击page1/2/3/4就可以去完成挑战了！ 结语还是要强调，不要在不被授权的网站上练习MySQL。下一期（很快555）我们学习基于报错的的注入，也就是less1-less6。","link":"/2022/05/08/sqli1/"},{"title":"SQL注入新手教程——前言","text":"什么是SQL注入？​ 要了解什么是SQL注入，我们首先要知道SQL是什么。SQL，全称Structured Query Language，即数据库的结构化查询语句，用来从数据库中查询内容。​ 绝大多数网站都有一个数据库，比如我们在网购平台搜索商品的时候，其实就是在从网站的数据库中查询我们想要的内容，这个过程就用到了SQL语句，只不过是在设计好的语句中插入了我们输入的值。​ 但是如果一个web应用程序对用户输入的内容不进行严格的筛查和过滤，用户就有可能通过改变输入的值、添加SQL语句执行不被授权的操作，从而查看数据库的敏感信息或者在服务器上植入木马等。这个过程就被称为SQL注入 学习SQL注入需要什么基础？​ 显然，要学会基本的SQL语句。目前大多数网站使用的都是开源可以白嫖的MySQL数据库，因此建议学MySQL。当然，不同的数据库有不同的特性，但是绝大部分SQL语句都是通用的，因此学好一个数据库，其他的基本上也就没问题了。学的时候有几个重点：掌握好“增删查改“；MySQL自带的information_schema数据库中tables, columns, schemata表要有一个大概的了解（之后学习SQL注入的时候经常要查询其中的内容）。存储引擎、事务、数据库设计之类的可以不用深入学甚至不学。​ 其他的一些基础比如cookie，比较零碎，可以学到的时候再进行学习。 如何学习（实践）SQL注入？​ SQL注入是一项技术，是技术就需要实践。但我们知道，利用SQL注入攻击他人的网站是违法行为，如果严重甚至构成犯罪。那么想要实践，就剩下两种方案：攻击用于学习SQL注入的网站；攻击自己搭建的测试网页。 用于学习SQL注入的网站 vulnweb PortSwigger 自己搭建靶场 sqli-labs (本系列会介绍如何搭建) DVWA这两个项目都在GitHub上开源，搭建教程可以去google或者CSDN搜索。 再次强调！！！千万不要在未授权的情况下尝试SQL注入！！！ SQL注入的分类​ 通过不同的分类方式，SQL注入被分为许多不同类型。但笔者认为如何分类并不十分重要，关键是要掌握每种SQL注入的原理。当然，还是要简单介绍一下SQL注入的分类。 按照是否回显（在页面上显示查询的报错信息）可以分为： 显注 盲注 按照请求方式（服务器获取用户提供信息的方式）可以分为： GET型注入 POST型注入 Cookie型注入 HTTP Header型注入 按照插入到查询语句中的参数类型可以分为： 数值型注入（传入的参数为数值） 字符型注入（传入的参数为字符串） 单引号字符型注入（字符串用单引号包裹：’输入的字符串’） 双引号字符型注入（字符串用双引号包裹：”输入的字符串”） 带括号的注入 数值+括号：(输入的数值) 单引号字符串+括号：(‘输入的字符串’) 双引号字符串+括号：(“输入的字符串”) 可以通过RSS订阅本篇博客,下一期将带大家搭建靶场环境🤓🤓🤓","link":"/2022/05/05/sqliIntro/"},{"title":"编辑器之神——vim基础教程","text":"前言vim编辑器，又被称为编辑器之神，倘若能够熟练使用，效率将极高。倘若使用Linux，使用vim几乎是必不可少的技能。 一般模式vim 路径/文件名 则默认一般模式 按键 功能描述 yy 复制光标当前一行 y数字y 复制从光标开始的n行 p 在光标后粘贴 u 撤销上一步 dd 删除光标当前行 d数字d 删除光标后n行 x 剪切一个字母，相当于del shift+x 剪切一个字母，相当于backspace w 移动到下一个单词开头 e 移动到下一个单词结尾 b 移动到上一个单词开头 yw 从光标开始复制一个单词（即到下一个空格为止） dw 从光标开始除一个单词（同上） ^ 移动到行首 $ 移动到行尾 y^ 复制光标前到行首的内容 y$ 复制光标到行尾的内容 d^ 删除光标前到行首的内容 d$ 删除光标到行尾的内容 gg或shift+h 移动到页首 shift+g或shift+l 移动到页尾 数字+shift+g 跳转到第n行 r 替换光标位置的字符 shift+r 进入替换模式，输入的字符会直接替换原文 编辑模式进入编辑模式 按键 功能 i 当前光标前 a 当前光标后 o 当前光标行的下一行 shift+i 光标所在行行首 shift+a 光标所在行行尾 shift+o 当前光标的上一行 其中i和o是最常用的 退出编辑模式按esc即可退出编辑模式，回到一般模式 命令模式在一般模式下可用:或/进入命令模式 命令 功能 :w 保存 :q 退出 :! 强制执行 :set nu 显示行号 :set nonu 关闭行号 /要查找的内容 查找内容，n下一个，shift+n上一个 :noh （查找结束）取消高亮 :s/old/new 将光标所在行的第一个old替换为new :s/old/new/g 将光标所在行的所有old替换为new :%s/old/new 将全部行的第一个old替换为new :%s/old/new/g 将全部old替换为new 三个模式间的关系一般模式为中枢。编辑模式下按esc回到一般模式后才能输入命令而命令模式输完命令自动回到一般模式，此时按相应的键进入编辑模式","link":"/2022/04/22/vim/"}],"tags":[{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"SQL注入","slug":"SQL注入","link":"/tags/SQL%E6%B3%A8%E5%85%A5/"},{"name":"vim","slug":"vim","link":"/tags/vim/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"}],"categories":[{"name":"学习分享","slug":"学习分享","link":"/categories/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"},{"name":"解决问题","slug":"解决问题","link":"/categories/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"},{"name":"教程","slug":"学习分享/教程","link":"/categories/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/%E6%95%99%E7%A8%8B/"},{"name":"Web安全","slug":"Web安全","link":"/categories/Web%E5%AE%89%E5%85%A8/"},{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"}]}